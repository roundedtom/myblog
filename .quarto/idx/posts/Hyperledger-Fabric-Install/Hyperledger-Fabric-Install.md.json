{"title":"hyperledger fabric (v2.0) 安装过程记录","markdown":{"yaml":{"title":"hyperledger fabric (v2.0) 安装过程记录","author":"Tom","date":"2022-02-09","toc":true,"code-block-bg":true,"highlight-style":"atom-one","categories":["Fabric"],"code-fold":false,"html-math-method":"katex","jupyter":"python3"},"headingText":"1 Go","containsRefs":false,"markdown":"\n\n这篇文章记录安装 fabric(v2.0) 的过程。\n\n\n# 1.1 下载安装\n\n在 Golang [官网](https://golang.google.cn/dl/)下载 linux 版本的压缩文件，在终端切换目录至压缩文件所在目录（这里是 Downloads)，然后将压缩文件解压缩至 `usr/local` 目录下。命令如下:\n\n```Bash\ncd Downloads\nsudo tar -xzf go1.12.1.linux-amd64.tar.gz -C /usr/local\n```\n\n此时在 `usr/local` 下会生成一个 `go` 目录，可以通过 `ls` 命令查看：\n\n```Bash\ncd /usr/local/go\nls\n```\n\n也可以用以下命令安装（ubuntu 系统）\n\n```Bash\nmkdir /usr/local/go\ncd /usr/local/go\nwget https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz\n```\n\n## 1.2 配置环境变量\n\n### 1.2.1 安装 vim\n\n在终端输入以下命令\n\n```Bash\nsudo apt-get install vim\n```\n\n### 1.2.2 编辑 home/.profile 文件\n\n先配置 GOROOT，即 go 的安装目录，编辑 `$HOME/.profile` 文件。利用 vim 打开文件，按 i 进入编辑，加入如下命令，保存并退出。\n\n```Bash\nexport GOROOT=\"usr/local/go\"\n```\n\n然后配置 GOPAHT，GOPATH 是 go 项目代码存放的地方，是我们自己定义的目录。对于 Ubuntu 系统，默认使用 `Home/go` 目录作为 GOPATH。该目录下有三个子目录：src，pkg，bin。\n\n```Bash\nexport GOPATH=$HOME/go\n```\n\n配置 GOBIN，并将 GOBIN 添加至环境变量中。\n\n```Bash\nexport GOBIN=$GOROOT/bin\nexport PATH=$PATH:$GOBIN\n```\n\n最后在终端中输入如下命令，使环境变量生效：\n\n```Bash\nsource .profile\n```\n\n# 2 docker\n\n## 2.1 安装 docker\n\n### 2.1.1 下载安装\n\n使用 docker 官网教程下载太慢，这里使用清华大学开源镜像，首先安装安装所需的依赖，在终端输入以下命令：\n\n```Bash\nsudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common\n```\n\n然后添加信任 docker 的 GPG 公钥：\n\n```Bash\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n```\n\n然后添加软件仓库：\n\n```Bash\nsudo add-apt-repository \\\n \"deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu \\\n $(lsb_release -cs) \\\n stable\"\n```\n\n最后安装最新版本的 Docker Engine-Community 和 containerd：\n\n```Bash\nsudo apt-get install docker-ce docker-ce-cli containerd.io\n```\n\n### 2.1.2 配置用户组\n\n添加$user 到 docker 用户组，免除每次运行 docker 都需要使用 sudo root 权限，在终端输入以下命令：\n\n```Bash\nsudo groupadd docker\nsudo usermod -aG docker ${USER}\nnewgrp docker\n```\n\n### 2.1.3 配置阿里云镜像加速服务\n\n由于 Docker 镜像服务器在国外，所以下载速度非常缓慢甚至失败，因此我们需要配置阿里云镜像加速服务。进入阿里云官网注册登录，在搜索框中搜索容器镜像服务，选择镜像加速器，获取自己的加速器地址，根据提示，在终端输入以下命令：\n\n```Bash\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n\"registry-mirrors\": [\"你的加速器地址\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n使用以下命令测试 docker 是否安装成功：\n\n```Bash\ndocker run hello-world\n```\n\n## 2.2 安装 docker-compose\n\n在终端输入以下命令，安装 1.25.4 版本 docker-compose:\n\n```Bash\nsudo curl -L https://github.com/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n```\n\n使用以下命令测试 docker-compose 是否安装成功：\n\n```Bash\ndocker-compose --version\n```\n\n# 3 fabric\n\n首先下载 fabric 源码（fabirc v2.0），在终端输入以下命令：\n\n```Bash\ncd /home/go/src/github.com/hyperledger/\ngit clone https://github.com/hyperledger/fabric.git\n```\n\n然后切换目录至 fabric/scripts 下，运行 bootstrap.sh 脚本，此脚本有两个作用：\n\n- 克隆 hyperledger/fabric-samples 仓库\n- 下载一些必要的二进制文件（hyperledger-fabric-linux-amd64-2.0.0.tar.gz)\n\n命令如下：\n\n```Bash\ncd /home/go/src/github.com/hyperledger/fabric/scripts\n./bootstrap.sh\n```\n\n由于墙的原因，可能导致如下报错，说明二进制文件下载失败（但一般 fabric-samples 可以下载成功）\n\n```Bash\n==> There was an error downloading the binary file.\n------> 2.0.0 platform specific fabric binary is not available to download <----\n```\n\n此时我们改为手动下载二进制文件，可以从我的百度云分享下载（https://pan.baidu.com/s/1ri8azrHUl1KNgxHon384jg，提取码：fhu2）。将hyperledger-fabric-linux-amd64-2.0.0.tar.gz（二进制文件）解压，将其中的config和bin文件夹拷贝至fabric根目录与fabric samples（在/fabric/scripts 目录下）根目录下。切换到/fabric samples/first network 目录，输入以下命令：\n\n```Bash\n./byfn.sh up\n```\n\n当看到命令行如下显示时，表明 fabric 安装完成：\n\n```Bash\n\n---\n\n/ **_| |_ _| / \\ | _ \\ |\\_ \\_|\n\\_** \\ | | / _ \\ | |_) | | |\n **_) | | | / _** \\ | _ < | |\n|\\_\\_\\_\\_/ |_| /_/ \\_\\ |_| \\_\\ |\\_|\n\nBuild your first network (BYFN) end-to-end test\n\nChannel name : mychannel\nCreating channel...\n```\n\n注意，若运行 byfn.sh 脚本报错，错误信息如下：\n\n```Bash\nERROR! Fabric Docker image version of 1.4.4 does not match this newer version of BYFN and is unsupported. Either move to a later version of Fabric or checkout an earlier version of fabric-samples.\n```\n\n这表明 fabric-samples 版本与 fabric docker 镜像版本不匹配，可以将 fabric-samples 替换为 1.4 版本（百度云文件中有），再次运行 byfn.sh 脚本。\n\n# 4 参考资料\n\n- https://golang.google.cn/doc/install\n- https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce\n- https://www.runoob.com/docker/ubuntu-docker-install.html\n- https://hlf.readthedocs.io/en/latest/prereqs.html","srcMarkdownNoYaml":"\n\n这篇文章记录安装 fabric(v2.0) 的过程。\n\n# 1 Go\n\n# 1.1 下载安装\n\n在 Golang [官网](https://golang.google.cn/dl/)下载 linux 版本的压缩文件，在终端切换目录至压缩文件所在目录（这里是 Downloads)，然后将压缩文件解压缩至 `usr/local` 目录下。命令如下:\n\n```Bash\ncd Downloads\nsudo tar -xzf go1.12.1.linux-amd64.tar.gz -C /usr/local\n```\n\n此时在 `usr/local` 下会生成一个 `go` 目录，可以通过 `ls` 命令查看：\n\n```Bash\ncd /usr/local/go\nls\n```\n\n也可以用以下命令安装（ubuntu 系统）\n\n```Bash\nmkdir /usr/local/go\ncd /usr/local/go\nwget https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz\n```\n\n## 1.2 配置环境变量\n\n### 1.2.1 安装 vim\n\n在终端输入以下命令\n\n```Bash\nsudo apt-get install vim\n```\n\n### 1.2.2 编辑 home/.profile 文件\n\n先配置 GOROOT，即 go 的安装目录，编辑 `$HOME/.profile` 文件。利用 vim 打开文件，按 i 进入编辑，加入如下命令，保存并退出。\n\n```Bash\nexport GOROOT=\"usr/local/go\"\n```\n\n然后配置 GOPAHT，GOPATH 是 go 项目代码存放的地方，是我们自己定义的目录。对于 Ubuntu 系统，默认使用 `Home/go` 目录作为 GOPATH。该目录下有三个子目录：src，pkg，bin。\n\n```Bash\nexport GOPATH=$HOME/go\n```\n\n配置 GOBIN，并将 GOBIN 添加至环境变量中。\n\n```Bash\nexport GOBIN=$GOROOT/bin\nexport PATH=$PATH:$GOBIN\n```\n\n最后在终端中输入如下命令，使环境变量生效：\n\n```Bash\nsource .profile\n```\n\n# 2 docker\n\n## 2.1 安装 docker\n\n### 2.1.1 下载安装\n\n使用 docker 官网教程下载太慢，这里使用清华大学开源镜像，首先安装安装所需的依赖，在终端输入以下命令：\n\n```Bash\nsudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common\n```\n\n然后添加信任 docker 的 GPG 公钥：\n\n```Bash\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n```\n\n然后添加软件仓库：\n\n```Bash\nsudo add-apt-repository \\\n \"deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu \\\n $(lsb_release -cs) \\\n stable\"\n```\n\n最后安装最新版本的 Docker Engine-Community 和 containerd：\n\n```Bash\nsudo apt-get install docker-ce docker-ce-cli containerd.io\n```\n\n### 2.1.2 配置用户组\n\n添加$user 到 docker 用户组，免除每次运行 docker 都需要使用 sudo root 权限，在终端输入以下命令：\n\n```Bash\nsudo groupadd docker\nsudo usermod -aG docker ${USER}\nnewgrp docker\n```\n\n### 2.1.3 配置阿里云镜像加速服务\n\n由于 Docker 镜像服务器在国外，所以下载速度非常缓慢甚至失败，因此我们需要配置阿里云镜像加速服务。进入阿里云官网注册登录，在搜索框中搜索容器镜像服务，选择镜像加速器，获取自己的加速器地址，根据提示，在终端输入以下命令：\n\n```Bash\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n\"registry-mirrors\": [\"你的加速器地址\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n使用以下命令测试 docker 是否安装成功：\n\n```Bash\ndocker run hello-world\n```\n\n## 2.2 安装 docker-compose\n\n在终端输入以下命令，安装 1.25.4 版本 docker-compose:\n\n```Bash\nsudo curl -L https://github.com/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n```\n\n使用以下命令测试 docker-compose 是否安装成功：\n\n```Bash\ndocker-compose --version\n```\n\n# 3 fabric\n\n首先下载 fabric 源码（fabirc v2.0），在终端输入以下命令：\n\n```Bash\ncd /home/go/src/github.com/hyperledger/\ngit clone https://github.com/hyperledger/fabric.git\n```\n\n然后切换目录至 fabric/scripts 下，运行 bootstrap.sh 脚本，此脚本有两个作用：\n\n- 克隆 hyperledger/fabric-samples 仓库\n- 下载一些必要的二进制文件（hyperledger-fabric-linux-amd64-2.0.0.tar.gz)\n\n命令如下：\n\n```Bash\ncd /home/go/src/github.com/hyperledger/fabric/scripts\n./bootstrap.sh\n```\n\n由于墙的原因，可能导致如下报错，说明二进制文件下载失败（但一般 fabric-samples 可以下载成功）\n\n```Bash\n==> There was an error downloading the binary file.\n------> 2.0.0 platform specific fabric binary is not available to download <----\n```\n\n此时我们改为手动下载二进制文件，可以从我的百度云分享下载（https://pan.baidu.com/s/1ri8azrHUl1KNgxHon384jg，提取码：fhu2）。将hyperledger-fabric-linux-amd64-2.0.0.tar.gz（二进制文件）解压，将其中的config和bin文件夹拷贝至fabric根目录与fabric samples（在/fabric/scripts 目录下）根目录下。切换到/fabric samples/first network 目录，输入以下命令：\n\n```Bash\n./byfn.sh up\n```\n\n当看到命令行如下显示时，表明 fabric 安装完成：\n\n```Bash\n\n---\n\n/ **_| |_ _| / \\ | _ \\ |\\_ \\_|\n\\_** \\ | | / _ \\ | |_) | | |\n **_) | | | / _** \\ | _ < | |\n|\\_\\_\\_\\_/ |_| /_/ \\_\\ |_| \\_\\ |\\_|\n\nBuild your first network (BYFN) end-to-end test\n\nChannel name : mychannel\nCreating channel...\n```\n\n注意，若运行 byfn.sh 脚本报错，错误信息如下：\n\n```Bash\nERROR! Fabric Docker image version of 1.4.4 does not match this newer version of BYFN and is unsupported. Either move to a later version of Fabric or checkout an earlier version of fabric-samples.\n```\n\n这表明 fabric-samples 版本与 fabric docker 镜像版本不匹配，可以将 fabric-samples 替换为 1.4 版本（百度云文件中有），再次运行 byfn.sh 脚本。\n\n# 4 参考资料\n\n- https://golang.google.cn/doc/install\n- https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce\n- https://www.runoob.com/docker/ubuntu-docker-install.html\n- https://hlf.readthedocs.io/en/latest/prereqs.html"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"highlight-style":"atom-one","html-math-method":"katex","output-file":"Hyperledger-Fabric-Install.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"cosmo","title-block-banner":true,"title":"hyperledger fabric (v2.0) 安装过程记录","author":"Tom","date":"2022-02-09","code-block-bg":true,"categories":["Fabric"],"jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}